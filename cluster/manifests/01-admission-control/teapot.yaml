apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: teapot-admission-controller
  labels:
    application: kubernetes
    component: teapot-admission-controller
webhooks:
  - name: pod-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/pod"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "pods/ephemeralcontainers"]
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_inject_environment_variables "true" }}
  - name: pod-binding-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/pod"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods/binding"]
{{- end }}
  - name: storageclass-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/storageclass"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: ["storage.k8s.io"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["storageclasses"]
  - name: node-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/node"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "None"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["nodes"]
  - name: configmap-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/configmap"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
  - name: cronjob-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/cronjob"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["cronjobs"]
  - name: job-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/job"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["jobs"]
  - name: deployment-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/deployment"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
  - name: statefulset-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/statefulset"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["statefulsets"]
  - name: crd-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/crd"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE"]
        apiGroups: ["apiextensions.k8s.io"]
        apiVersions: ["v1"]
        resources: ["customresourcedefinitions"]
  - name: stack-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/stack"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["UPDATE"]
        apiGroups: ["zalando.org"]
        apiVersions: ["v1"]
        resources: ["stacks"]
  - name: stackset-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/stackset"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["zalando.org"]
        apiVersions: ["v1"]
        resources: ["stacksets"]
  - name: hpa-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/hpa"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "None"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["autoscaling"]
        apiVersions: ["v2"]
        resources: ["horizontalpodautoscalers"]
  - name: serviceaccount-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/serviceaccount"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_check_daemonset_resources "true" }}
  - name: daemonset-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/daemonset"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["daemonsets"]
{{- end }}
  - name: priorityclass-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/priorityclass"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["scheduling.k8s.io"]
        apiVersions: ["v1"]
        resources: ["priorityclasses"]
  - name: postgresql-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/postgresql"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "DELETE" ]
        apiGroups: ["acid.zalan.do"]
        apiVersions: ["v1"]
        resources: ["postgresqls"]
  - name: namespace-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/namespace"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
  - name: service-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/service"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_enable_rolebinding_webhook "true" }}
  - name: rolebinding-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/rolebinding"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["rbac.authorization.k8s.io"]
        apiVersions: ["v1"]
        resources: ["rolebindings", "clusterrolebindings"]
{{- end }}
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_enable_write_protection_webhook "true" }}
  - name: pod-exec-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/pod/exec"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: [ "kube-system", "visibility", "kubenurse" ]
    rules:
      - operations: [ "CONNECT" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods/exec"]
        scope: "Namespaced"
    matchConditions:
      - name: 'exclude-privileged-groups'
        expression: 'request.userInfo.groups.all(g, !(g in ["okta:common/administrator", "zalando:administrator"]))'
      - name: 'exclude-postgres-admins'
        expression: 'request.userInfo.groups.all(g, !(g in ["okta:common/postgres-admin"]))'
  - name: namespaced-deny-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/deny"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: In
          values: [ "kube-system", "visibility", "kubenurse" ]
    rules:
      - operations: [ "*" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*/*"]
        scope: "Namespaced"
    matchConditions:
      - name: 'exclude-privileged-groups'
        expression: 'request.userInfo.groups.all(g, !(g in ["system:masters", "system:nodes", "system:serviceaccounts:kube-system", "okta:common/administrator", "zalando:administrator"]))'
      - name: 'exclude-privileged-usernames'
        expression: '!(request.userInfo.username in ["system:kube-controller-manager", "system:kube-scheduler", "zalando-iam:zalando:service:k8sapi_credentials-provider"])'
      - name: 'exclude-eks-components'
        expression: '!request.userInfo.username.startsWith("eks:")'
  - name: global-deny-admitter.teapot.zalan.do
    clientConfig:
      url: "https://localhost:8085/deny"
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    objectSelector:
      matchLabels:
        admission.zalando.org/infrastructure-component: "true"
    rules:
      - operations: [ "*" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*/*"]
        scope: "Cluster"
    matchConditions:
      - name: 'exclude-privileged-groups'
        expression: 'request.userInfo.groups.all(g, !(g in ["system:masters", "system:nodes", "system:serviceaccounts:kube-system", "okta:common/administrator", "zalando:administrator"]))'
      - name: 'exclude-privileged-usernames'
        expression: '!(request.userInfo.username in ["system:kube-controller-manager", "system:kube-scheduler", "zalando-iam:zalando:service:k8sapi_credentials-provider"])'
      - name: 'exclude-eks-components'
        expression: '!request.userInfo.username.startsWith("eks:")'
{{- end }}
